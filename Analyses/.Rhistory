pairwise(lm.rrpp((preds+E.iso[perms[[1]],]) ~ rdf$svl*rdf$habitat, iter=0),
groups = rdf$habitat,covariate = rdf$svl)$slopes[[1]]
slopes <- lapply(1:1000, function(j) {
pairwise(lm.rrpp((preds+E.iso[perms[[1]],]) ~ rdf$svl*rdf$habitat, iter=0),
groups = rdf$habitat,covariate = rdf$svl)$slopes[[1]]
})
slopes
slopes <- lapply(1:1000, function(j) {
pairwise(lm.rrpp((preds+E.iso[perms[[j]],]) ~ rdf$svl*rdf$habitat, iter=0),
groups = rdf$habitat,covariate = rdf$svl)$slopes[[1]]
})
perms
perms$iter.1
perms[[1]]
perms[[2]]
for(j in 1:2){
pairwise(lm.rrpp((preds+E.iso[perms[[j]],]) ~ rdf$svl*rdf$habitat, iter=0),
groups = rdf$habitat,covariate = rdf$svl)$slopes[[1]]
}
slopes <- list()
for(j in 1:2){
slopes[[j]] <- pairwise(lm.rrpp((preds+E.iso[perms[[j]],]) ~ rdf$svl*rdf$habitat, iter=0),
groups = rdf$habitat,covariate = rdf$svl)$slopes[[1]]
}
slopes[[1]]
slopes[[2]]
slopes <- list()
for(j in 1:1000){
slopes[[j]] <- pairwise(lm.rrpp((preds+E.iso[perms[[j]],]) ~ rdf$svl*rdf$habitat, iter=0),
groups = rdf$habitat,covariate = rdf$svl)$slopes[[1]]
}
slp.ang <- lapply(1:1000, function(j) acos(RRPP:::vec.cor.matrix(rbind(coef.iso,slopes[[j]])))*180/pi)
slp.hab.obs <- slp.ang[[1]]
slp.Z <- RRPP:::effect.list(slp.ang)
slp.P <- RRPP:::Pval.list(slp.ang)
slp.P <-1-slp.P; diag(slp.P) <- 1 #test for similar (not different)
slp.hab.obs
slp.Z
slp.P
slp.P <- RRPP:::Pval.list(slp.ang)
slp.P
###### ISOMETRY
coef.iso <- c(1,1,1,1,1,1,1,1)
acos(RRPP:::vec.cor.matrix(rbind(slp.hab,coef.iso)))*180/pi
# 2B: Compare evolutionary and static (habitat) allometry
fit.0 <- lm.rrpp(shape~habitat, data = rdf) #H_0: isometry
pw.hab <- pairwise(fit.hab, fit.null = fit.0, groups = rdf$habitat, covariate = rdf$svl)
slp.hab <- pw.hab$slopes[[1]] #slopes by habitat
###### ISOMETRY
coef.iso <- c(1,1,1,1,1,1,1,1)
acos(RRPP:::vec.cor.matrix(rbind(slp.hab,coef.iso)))*180/pi
slp.hab
slp.hab.obs
slp.hab
slopes[[1]]
slp.ang <- lapply(1:1000, function(j) acos(RRPP:::vec.cor.matrix(rbind(slopes[[j]],coef.iso)))*180/pi)
slp.hab.obs <- slp.ang[[1]]
slp.Z <- RRPP:::effect.list(slp.ang)
slp.P <- RRPP:::Pval.list(slp.ang)
slp.hab.obs
slp.Z
slp.P  #all differ from isometry, and ground differs from rock and tree
summary(pw.hab1, type = 'VC', stat.table = FALSE)
slp.P <- RRPP:::Pval.list(slp.ang)
slp.hab.obs
slp.Z
slp.P  #all differ from isometry, and ground differs from rock and tree
slp.hab
slp.hab.obs
slopes[[1]]
coef.evol
# 2B: Compare evolutionary and static (habitat) allometry
#H_0: isometry
slp.ang.ev <- lapply(1:1000, function(j) acos(RRPP:::vec.cor.matrix(rbind(coef.evol,slopes[[j]])))*180/pi)
slp.hab.ev.obs <- slp.ang.ev[[1]]
slp.hab.ev.obs <- slp.ang.ev[[1]]
slp.Z.ev <- RRPP:::effect.list(slp.ang.ev)
slp.P.ev <- RRPP:::Pval.list(slp.ang.ev)
slp.hab.ev.obs
slp.Z.ev
slp.P.ev  #angles significantly smaller than expected
res <- cbind(slp.hab.obs.ev[-1,1],slp.Z.ev[-1,1],slp.P.ev[-1,1])
colnames(res) <- c("Angle","Effect Size", "P-value")
res <- cbind(slp.hab.ev.obs[-1,1],slp.Z.ev[-1,1],slp.P.ev[-1,1])
colnames(res) <- c("Angle","Effect Size", "P-value")
rownames(res) <- c("Ground", "Rock", "Tree")
res
slp.hab.obs
slp.Z
slp.P  #all differ from isometry, and ground differs from rock and tree
table(rdf$habitat)
res
RRPP:::perm.index(10,10)
RRPP:::perm.index(10,10)
RRPP:::perm.index(10,10, seed = "script_clean_main-DCA-11-04-Isometry.R")
lm.rrpp
?lm.rrpp
perms <- RRPP:::perm.index(n = fit.hab$LM$n, iter = 999, seed = "random")
slopes <- list()
for(j in 1:1000){
slopes[[j]] <- pairwise(lm.rrpp((preds+E.iso[perms[[j]],]) ~ rdf$svl*rdf$habitat, iter=0),
groups = rdf$habitat,covariate = rdf$svl)$slopes[[1]]
}
slp.ang <- lapply(1:1000, function(j) acos(RRPP:::vec.cor.matrix(rbind(slopes[[j]],coef.iso)))*180/pi)
slp.hab.obs <- slp.ang[[1]]
slp.Z <- RRPP:::effect.list(slp.ang)
slp.P <- RRPP:::Pval.list(slp.ang)
slp.hab.obs
slp.Z
slp.P  #all differ from isometry, and ground differs from rock and tree
perms <- RRPP:::perm.index(n = fit.hab$LM$n, iter = 999, seed = "random")
slopes <- list()
for(j in 1:1000){
slopes[[j]] <- pairwise(lm.rrpp((preds+E.iso[perms[[j]],]) ~ rdf$svl*rdf$habitat, iter=0),
groups = rdf$habitat,covariate = rdf$svl)$slopes[[1]]
}
slp.ang <- lapply(1:1000, function(j) acos(RRPP:::vec.cor.matrix(rbind(slopes[[j]],coef.iso)))*180/pi)
slp.hab.obs <- slp.ang[[1]]
slp.Z <- RRPP:::effect.list(slp.ang)
slp.P <- RRPP:::Pval.list(slp.ang)
slp.hab.obs
slp.Z
slp.P  #all differ from isometry, and ground differs from rock and tree
perms <- RRPP:::perm.index(n = fit.hab$LM$n, iter = 999, seed = "random")
slopes <- list()
for(j in 1:1000){
slopes[[j]] <- pairwise(lm.rrpp((preds+E.iso[perms[[j]],]) ~ rdf$svl*rdf$habitat, iter=0),
groups = rdf$habitat,covariate = rdf$svl)$slopes[[1]]
}
slp.ang <- lapply(1:1000, function(j) acos(RRPP:::vec.cor.matrix(rbind(slopes[[j]],coef.iso)))*180/pi)
slp.hab.obs <- slp.ang[[1]]
slp.Z <- RRPP:::effect.list(slp.ang)
slp.P <- RRPP:::Pval.list(slp.ang)
slp.hab.obs
slp.Z
slp.P  #
perms <- RRPP:::perm.index(n = fit.hab$LM$n, iter = 999, seed = "random")
slopes <- list()
for(j in 1:1000){
slopes[[j]] <- pairwise(lm.rrpp((preds+E.iso[perms[[j]],]) ~ rdf$svl*rdf$habitat, iter=0),
groups = rdf$habitat,covariate = rdf$svl)$slopes[[1]]
}
slp.ang <- lapply(1:1000, function(j) acos(RRPP:::vec.cor.matrix(rbind(slopes[[j]],coef.iso)))*180/pi)
slp.hab.obs <- slp.ang[[1]]
slp.Z <- RRPP:::effect.list(slp.ang)
slp.P <- RRPP:::Pval.list(slp.ang)
slp.hab.obs
slp.Z
slp.P
perms <- RRPP:::perm.index(n = fit.hab$LM$n, iter = 999)
slopes <- list()
for(j in 1:1000){
slopes[[j]] <- pairwise(lm.rrpp((preds+E.iso[perms[[j]],]) ~ rdf$svl*rdf$habitat, iter=0),
groups = rdf$habitat,covariate = rdf$svl)$slopes[[1]]
}
slp.ang <- lapply(1:1000, function(j) acos(RRPP:::vec.cor.matrix(rbind(slopes[[j]],coef.iso)))*180/pi)
slp.hab.obs <- slp.ang[[1]]
slp.Z <- RRPP:::effect.list(slp.ang)
slp.P <- RRPP:::Pval.list(slp.ang)
slp.hab.obs
slp.Z
slp.P
coef(fit.hab)
intercepts
b
anova(lm.rrpp(shpae~habitat, data = rdf))
anova(lm.rrpp(shape~habitat, data = rdf))
fit.hab$LM$mean
coef(fit.hab)
coef(lm.rrpp(shape~svl+habitat, data = rdf))
coef(lm.rrpp(shape~svl, data = rdf))
mn.sz
#### DO this by group to find common slope model
mn.sz <- tapply(rdf$svl,habitat,mean)
#### DO this by group to find common slope model
mn.sz <- tapply(rdf$svl,rdf$habitat,mean)
mn.sz
mn.shape
mn.shape <- rowsum(rdf$shape, rdf$habitat)/as.vector(table(rdf$habitat))
mn.shape
coef.iso
mn.sz
coef.iso*mean(rdf.svl)
mean(rdf$svl)
coef.iso * mean(rdf$svl)
coef.iso %*% mn.sz
coef.iso %*% t(mn.sz)
t(coef.iso) %*% mn.sz
crossprod(coef.iso,mn.sz)
tcrossprod(coef.iso,mn.sz)
t(tcrossprod(coef.iso,mn.sz))
mn.shape
intercepts <- mn.shape - t(tcrossprod(coef.iso,mn.sz))
intercepts
# 2A: Compare habitat vectors versus isometry and to each other
#H_0: isometry as single slope
mn.sz <- mean(rdf$svl)
mn.shape <- apply(rdf$shape,2,mean)
coef.iso <- c(1,1,1,1,1,1,1,1)
intercepts <- mn.shape - (coef.iso * mn.sz)
intercepts
coef(fit.hab)
#### DO this by group to find common slope model
mn.sz <- tapply(rdf$svl,rdf$habitat,mean)
mn.shape <- rowsum(rdf$shape, rdf$habitat)/as.vector(table(rdf$habitat))
intercepts <- mn.shape - (coef.iso * mn.sz)
intercepts <- mn.shape - t(tcrossprod(coef.iso,mn.sz))
intercepts
intercepts-intercepts[1,]
intercepts[2,]-intercepts[1,]
b <- rbind(intercepts[1,],coef.iso,intercepts[2,]-intercepts[1,],
intercepts[3,]-intercepts[1,])
X <- cbind(1,rdf$svl)
preds <- X%*%b
model.matrix(rdf$svl)
model.matrix(~rdf$svl)
cbind(1,rdf$svl)
model.matrix~svl+habitat
model.matrix(~rdf$svl+rdf$habitat)
X <- model.matrix(~rdf$svl+rdf$habitat)
b <- rbind(intercepts[1,],coef.iso,intercepts[2,]-intercepts[1,],
intercepts[3,]-intercepts[1,])
preds <- X%*%b
preds
#### DO this by group to find common slope model
mn.sz <- tapply(rdf$svl,rdf$habitat,mean)
mn.shape <- rowsum(rdf$shape, rdf$habitat)/as.vector(table(rdf$habitat))
intercepts <- mn.shape - t(tcrossprod(coef.iso,mn.sz))
X <- model.matrix(~rdf$svl+rdf$habitat)
b <- rbind(intercepts[1,],coef.iso,intercepts[2,]-intercepts[1,],
intercepts[3,]-intercepts[1,])
preds <- X%*%b
E.iso <- rdf$shape - preds
perms <- RRPP:::perm.index(n = fit.hab$LM$n, iter = 999)
slopes <- list()
libs <- c('geomorph', 'RRPP', 'phytools', 'geiger', 'tidyverse')
easypackages::libraries(libs)
# 0: Data Prep
data0 <- read.table('data/morpho/morpho_pristurus.csv', sep = ';', dec = '.', header = TRUE, stringsAsFactors = TRUE)
sp.to.keep <- names(which(table(data0$species) >= 5))
data <- data0[data0$species %in% sp.to.keep, ]
data$species <- droplevels(data$species)
data$SVL <- log(data$SVL)
shape <- as.matrix(log(data[, 8:ncol(data)]))
rdf <- rrpp.data.frame(svl = data$SVL, shape = shape, habitat = data$habitat_broad, species = data$species)
tree0 <- read.nexus('data/phylogeny/pristurus_tree_final.nex')
LS.mns <- pairwise(lm.rrpp(shape~species, data = rdf, iter=0), groups = rdf$species)$LS.means[[1]]
sz.mn <- tapply(rdf$svl,rdf$species,mean)
hab.mn <- as.factor(by(rdf$habitat,rdf$species,unique))
levels(hab.mn) <- levels(rdf$habitat)
tree <- treedata(phy = tree0, data = LS.mns)$phy
C <- vcv.phylo(tree)
# 1: Evolutionary Allometry
allom.sp <- lm.rrpp(LS.mns~sz.mn, Cov = C)
allom.ind <- lm.rrpp(shape~svl, data = rdf)
anova(allom.sp)
anova(allom.ind)
M <-rbind(coef.evol <- allom.sp$LM$gls.coefficients[2,],
coef.ind <- allom.ind$LM$coefficients[2,])
acos(RRPP:::vec.cor.matrix(M))*180/pi  #virtually parallel (angle of 1.49 degrees)
# 2: MANCOVA & comparison of allometry among habitats
fit.hab <- lm.rrpp(shape~svl*habitat, data = rdf)
anova(fit.hab)
pw.hab1 <- pairwise(fit.hab, groups = rdf$habitat, covariate = rdf$svl)
summary(pw.hab1, type = 'VC', stat.table = FALSE)
# 2A: Compare habitat vectors versus isometry and to each other
#H_0: isometry as common slope model
mn.sz <- tapply(rdf$svl,rdf$habitat,mean)
mn.shape <- rowsum(rdf$shape, rdf$habitat)/as.vector(table(rdf$habitat))
intercepts <- mn.shape - t(tcrossprod(coef.iso,mn.sz))
X <- model.matrix(~rdf$svl+rdf$habitat)
# 2A: Compare habitat vectors versus isometry and to each other
#H_0: isometry as common slope model
mn.sz <- tapply(rdf$svl,rdf$habitat,mean)
mn.shape <- rowsum(rdf$shape, rdf$habitat)/as.vector(table(rdf$habitat))
intercepts <- mn.shape - t(tcrossprod(coef.iso,mn.sz))
coef.iso <- c(1,1,1,1,1,1,1,1)
intercepts <- mn.shape - t(tcrossprod(coef.iso,mn.sz))
X <- model.matrix(~rdf$svl+rdf$habitat)
b <- rbind(intercepts[1,],coef.iso,intercepts[2,]-intercepts[1,],
intercepts[3,]-intercepts[1,])
preds <- X%*%b
E.iso <- rdf$shape - preds
perms <- RRPP:::perm.index(n = fit.hab$LM$n, iter = 999)
slopes <- list()
for(j in 1:1000){
slopes[[j]] <- pairwise(lm.rrpp((preds+E.iso[perms[[j]],]) ~ rdf$svl*rdf$habitat, iter=0),
groups = rdf$habitat,covariate = rdf$svl)$slopes[[1]]
}
slp.ang <- lapply(1:1000, function(j) acos(RRPP:::vec.cor.matrix(rbind(slopes[[j]],coef.iso)))*180/pi)
slp.hab.obs <- slp.ang[[1]]
slp.Z <- RRPP:::effect.list(slp.ang)
slp.P <- RRPP:::Pval.list(slp.ang)
slp.hab.obs
slp.Z
b <- rbind(intercepts[1,],coef.iso,intercepts[2,]-intercepts[1,],
intercepts[3,]-intercepts[1,])
slp.P
# 2B: Compare evolutionary and static (habitat) allometry
#H_0: isometry
slp.ang.ev <- lapply(1:1000, function(j) acos(RRPP:::vec.cor.matrix(rbind(coef.evol,slopes[[j]])))*180/pi)
slp.hab.ev.obs <- slp.ang.ev[[1]]
slp.Z.ev <- RRPP:::effect.list(slp.ang.ev)
slp.P.ev <- RRPP:::Pval.list(slp.ang.ev)
slp.hab.ev.obs
slp.Z.ev
slp.P.ev  #not different from evol. allometry
slp.hab.obs
slp.Z
slp.P
res
slp.hab.ev.obs
slp.Z.ev
slp.P.ev  #not different from evol. allometry
res <- cbind(slp.hab.ev.obs[-1,1],slp.Z.ev[-1,1],slp.P.ev[-1,1])
colnames(res) <- c("Angle","Effect Size", "P-value")
rownames(res) <- c("Ground", "Rock", "Tree")
res
rownames(res) <- c("Ev-Ground", "EV-Rock", "EV-Tree")
res
rownames(res) <- c("Ev vs. Ground", "EV-Rock", "EV-Tree")
res
rownames(res) <- c("Ev vs. Ground", "Ev vs. Rock", "Ev vs. Tree")
res
getwd()
libs <- c('geomorph', 'RRPP', 'phytools', 'geiger', 'tidyverse')
easypackages::libraries(libs)
data0 <- read.table('data/morpho/morpho_pristurus.csv', sep = ';', dec = '.', header = TRUE, stringsAsFactors = TRUE)
sp.to.keep <- names(which(table(data0$species) >= 5))
data <- data0[data0$species %in% sp.to.keep, ]
data$species <- droplevels(data$species)
data$SVL <- log(data$SVL)
shape <- as.matrix(log(data[, 8:ncol(data)]))
rdf <- rrpp.data.frame(svl = data$SVL, shape = shape, habitat = data$habitat_broad, species = data$species)
tree0 <- read.nexus('data/phylogeny/pristurus_tree_final.nex')
LS.mns <- pairwise(lm.rrpp(shape~species, data = rdf, iter=0), groups = rdf$species)$LS.means[[1]]
sz.mn <- tapply(rdf$svl,rdf$species,mean)
hab.mn <- as.factor(by(rdf$habitat,rdf$species,unique))
levels(hab.mn) <- levels(rdf$habitat)
tree <- treedata(phy = tree0, data = LS.mns)$phy
C <- vcv.phylo(tree)
allom.sp <- lm.rrpp(LS.mns~sz.mn, Cov = C)
allom.ind <- lm.rrpp(shape~svl, data = rdf)
anova(allom.sp)
anova(allom.ind)
M <-rbind(coef.evol <- allom.sp$LM$gls.coefficients[2,],
coef.ind <- allom.ind$LM$coefficients[2,])
M
acos(RRPP:::vec.cor.matrix(M))*180/pi  #virtually parallel (angle of 1.49 degrees)
# 2: MANCOVA & comparison of allometry among habitats
fit.hab <- lm.rrpp(shape~svl*habitat, data = rdf)
anova(fit.hab)
# 2A: Compare habitat vectors versus isometry and to each other
#H_0: isometry as common slope model
mn.sz <- tapply(rdf$svl,rdf$habitat,mean)
mn.shape <- rowsum(rdf$shape, rdf$habitat)/as.vector(table(rdf$habitat))
LS.mns
sz.mn
mn.sz
mn.shape
coef.iso <- c(1,1,1,1,1,1,1,1)
intercepts <- mn.shape - t(tcrossprod(coef.iso,mn.sz))
X <- model.matrix(~rdf$svl+rdf$habitat)
b <- rbind(intercepts[1,],coef.iso,intercepts[2,]-intercepts[1,],
intercepts[3,]-intercepts[1,])
X
b
preds <- X%*%b
preds
E.iso <- rdf$shape - preds
E.iso
perms <- RRPP:::perm.index(n = fit.hab$LM$n, iter = 999)
perms
slopes <- list()
for(j in 1:1000){
slopes[[j]] <- pairwise(lm.rrpp((preds+E.iso[perms[[j]],]) ~ rdf$svl*rdf$habitat, iter=0),
groups = rdf$habitat,covariate = rdf$svl)$slopes[[1]]
}
slopes
E.iso
slp.ang <- lapply(1:1000, function(j) acos(RRPP:::vec.cor.matrix(rbind(slopes[[j]],coef.iso)))*180/pi)
slp.ang
slp.hab.obs <- slp.ang[[1]]
slp.Z <- RRPP:::effect.list(slp.ang)
slp.P <- RRPP:::Pval.list(slp.ang)
slp.Z
slp.P
# 2B: Compare evolutionary and static (habitat) allometry
#H_0: common slope isometry
slp.ang.ev <- lapply(1:1000, function(j) acos(RRPP:::vec.cor.matrix(rbind(coef.evol,slopes[[j]])))*180/pi)
slp.hab.ev.obs <- slp.ang.ev[[1]]
slp.Z.ev <- RRPP:::effect.list(slp.ang.ev)
slp.P.ev <- RRPP:::Pval.list(slp.ang.ev)
slp.hab.ev.obs
slp.Z.ev
slp.P.ev  #not different from evol. allometry
res <- cbind(slp.hab.ev.obs[-1,1],slp.Z.ev[-1,1],slp.P.ev[-1,1])
colnames(res) <- c("Angle","Effect Size", "P-value")
rownames(res) <- c("Ev vs. Ground", "Ev vs. Rock", "Ev vs. Tree")
res
# 3: Map allometry slopes on phylogeny
head.scores <- two.b.pls(shape[, c(2:4)], rdf$svl)$XScores[, 1]
limb.scores <- two.b.pls(shape[, 5:8], rdf$svl)$XScores[, 1]
coef.head <- lm.rrpp(head.scores ~ rdf$svl*rdf$species)$LM$coefficients
coef.limb <- lm.rrpp(limb.scores ~ rdf$svl*rdf$species)$LM$coefficients
head.slp <- coef.head[grep('svl', rownames(coef.head)), ]
head.slp[-1] <- head.slp[-1] + head.slp[1]
limb.slp <- coef.limb[grep('svl', rownames(coef.limb)), ]
limb.slp[-1] <- limb.slp[-1] + limb.slp[1]
names(limb.slp) <- names(head.slp) <- levels(rdf$species)
cor(head.slp,limb.slp)
plot(head.slp,limb.slp)
contMap(tree = tree, x = head.slp, outline = FALSE)
cm.limb <- contMap(tree = tree, x = limb.slp, outline = FALSE)
# 4: Compare Integration
lindims.gp <- lapply( split( shape[,1:ncol(shape)], rdf$habitat), matrix, ncol=ncol(shape))
Vrel.gp <- Map(function(x) integration.Vrel(x), lindims.gp)
c(Vrel.gp$ground$ZR,Vrel.gp$rock$ZR,Vrel.gp$tree$ZR)
out <- compare.ZVrel(Vrel.gp$ground, Vrel.gp$rock, Vrel.gp$tree)
summary(out)
# 5: phylomorphospace of size-standardized data (residuals)
shape.res <- residuals(allom.sp)
pca.w.phylo <- gm.prcomp(shape.res, phy = tree)
plot(pca.w.phylo, phylo = TRUE, pch = 21, bg = 'black', phylo.par = list(node.labels = FALSE))
##################################### FOR SI
# 4b: phylomorphospace of linear measures
pca.w.phylo2 <- gm.prcomp(LS.mns, phy = tree)
plot(pca.w.phylo2, phylo = TRUE, pch = 21, bg = 'black', phylo.par = list(node.labels = FALSE))
#PC1 is size*-1
plot(sz.mn,pca.w.phylo2$x[,1])
cor(sz.mn,pca.w.phylo2$x[,1]) #-0.987
# Disparity among habitat groups
fit.lm <- lm.rrpp(LS.mns~hab.mn, Cov =C)
PW.lm <- pairwise(fit.lm,groups = hab.mn)
summary(PW.lm, test.type = "var")
lindims.gp
Vrel.gp
c(Vrel.gp$ground$ZR,Vrel.gp$rock$ZR,Vrel.gp$tree$ZR)
out
summary(out)
# Integration of size-standardized variables (similar patterns; lower integration)
shape.2 <- shape - rdf$svl
shape.gp <- lapply( split( shape.2[,1:ncol(shape.2)], rdf$habitat), matrix, ncol=ncol(shape.2))
Vrel.gp.shp <- Map(function(x) integration.Vrel(x), shape.gp)
out.shp <- compare.ZVrel(Vrel.gp.shp$ground, Vrel.gp.shp$rock, Vrel.gp.shp$tree)
summary(out.shp)
PCA.gp <- Map(function(x) prcomp(x), lindims.gp)
PCA.gp.shp <- Map(function(x) prcomp(x), shape.gp)
PCA.gp$ground$sdev
PCA.gp.shp$ground$sdev
##### Histograms of size: largest size range is in ground dwelling
svl.gp <- split(rdf$svl, rdf$habitat)
range(svl.gp$ground)
hist(svl.gp$ground,xlim = c(2.5,4.5), ylim = c(0,150),xlab = "log(SVL)", col = "black")
hist(svl.gp$rock,add = TRUE, col="blue")
hist(svl.gp$tree,add = TRUE, col="red")
allom.sp
allom.ind
M <-rbind(coef.evol <- allom.sp$LM$gls.coefficients[2,],
coef.ind <- allom.ind$LM$coefficients[2,])
M
acos(RRPP:::vec.cor.matrix(M))*180/pi  #virtually parallel (angle of 1.49 degrees)
slp.P.ev  #not different from evol. allometry
slp.Z.ev
slp.hab.ev.obs
slp.Z.ev
slp.P.ev  #not different from evol. allometry
slp.hab.ev.obs
res
slp.ang.ev
slp.hab.ev.obs
res
slp.P
slp.Z
slp.P
mn.sz
mn.shape
coef.iso
mn.sz
tcrossprod(coef.iso,mn.sz)
t(tcrossprod(coef.iso,mn.sz))
mn.shape
coef.evol
M
M <-rbind(coef.evol = allom.sp$LM$gls.coefficients[2,],
coef.ind = allom.ind$LM$coefficients[2,])
M
slp.ang.ev
j
coef.evol
citation('tidyverse')
citation('phytools')
help(package=phytools)
citation('tidyverse')
help(package=tidyverse)
citation('ggphylomorpho')
slp.P
res
slp.Z.ev
slp.ang.ev
coef.evol
slp.P.ev
coef.evol
rbind(coef.evol <- allom.sp$LM$gls.coefficients[2,],
coef.ind <- allom.ind$LM$coefficients[2,])
rbind(coef.evol = allom.sp$LM$gls.coefficients[2,],
coef.ind = allom.ind$LM$coefficients[2,])
M
slp.ang.ev
perms
slp.ang.ev
slp.P
