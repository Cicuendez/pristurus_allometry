setwd("C:/DeanData/Research/2022-SabbaticalProjects/Pristurus")
# Packages ----
libs <- c('geomorph', 'RRPP', 'phytools', 'geiger', 'tidyverse',
'ggphylomorpho')
easypackages::libraries(libs)
# Morpho data ----
# Both species data and specimen data
data.sp <- read.table('data/morpho/morpho_sp_final.csv', sep = ';',
dec = '.', header = TRUE)
data0 <- read.table('data/morpho/morpho_pristurus.csv', sep = ';',
dec = '.', header = TRUE)
# Drop species with less than 5 individuals
sp.to.keep <- names(which(table(data0$species) > 5) == TRUE)
setwd("C:/DeanData/Research/2022-SabbaticalProjects/Pristurus/Analyses")
# Morpho data ----
# Both species data and specimen data
data.sp <- read.table('data/morpho/morpho_sp_final.csv', sep = ';',
dec = '.', header = TRUE)
data0 <- read.table('data/morpho/morpho_pristurus.csv', sep = ';',
dec = '.', header = TRUE)
# Drop species with less than 5 individuals
sp.to.keep <- names(which(table(data0$species) > 5) == TRUE)
data <- data0[data0$species %in% sp.to.keep, ]
# number of species
n.sp <- length(table(data$species))
# Phylogeny ----
tree0 <- read.nexus('data/phylogeny/pristurus_tree_final.nex')
# Prepare specimen data for analysis ----
svl <- log(data$SVL)
shape <- as.matrix(log(data[, 8:ncol(data)]))
species.fctr <- as.factor(data$species)
habitat.fctr <- as.factor(data$habitat_broad)
View(shape)
rdf <- rrpp.data.frame(svl = svl, shape = shape, habitat = habitat.fctr,
species = species.fctr)
# Habitat model ----
# Get slopes per habitat
# Multivariate linear model
fit.hab <- lm.rrpp(shape~svl*habitat, data = rdf)
anova(fit.hab)
##### regression coefficients
fit.coef <- fit.hab$LM$coefficients
rbind(fit.coef[1,], fit.coef[2,]) #ground
rbind(fit.coef[1,]+fit.coef[3,], fit.coef[2,]+fit.coef[5,]) #rock
rbind(fit.coef[1,]+fit.coef[4,], fit.coef[2,]+fit.coef[6,]) #tree
# Pairwise differences in the angle ----
pw.hab <- pairwise(fit.hab, groups = rdf$habitat, covariate = rdf$svl)
pw.hab_df <- summary(pw.hab, type = 'VC', stat.table = FALSE)
pw.hab_df
# Set habitat colors ----
hab.colors <- c(ground = "#F1B670", rock = "#683B5E", tree = "#E93F7B")
# Set customized ggplot2 theme ----
theme.clean <- function(){
theme_minimal() +
theme(axis.text.x = element_text(size = 10, angle = 0, vjust = 1, hjust = 1),
axis.text.y = element_text(size = 10),
axis.title.x = element_text(size = 11, face = "plain"),
axis.title.y = element_text(size = 11, face = "plain"),
#          panel.grid.major.x = element_blank(),
#          panel.grid.minor.x = element_blank(),
#          panel.grid.minor.y = element_blank(),
#          panel.grid.major.y = element_blank(),
plot.margin = unit(c(0.5, 0.5, 0.5, 0.5), units = , "cm"),
plot.title = element_text(size = 15, vjust = 1, hjust = 0.5,
face = 'bold'),
plot.subtitle = element_text(hjust = 0.5),
legend.text = element_text(size = 10, face = "plain"),
legend.position = "right")
}
# plot base ----
# plot predicted values
plot.base <- plot(fit.hab, predictor = rdf$svl, type = 'regression', pch = 16,
col = hab.colors[as.numeric(rdf$habitat)])
legend('topleft', levels(habitat.fctr), pt.bg = hab.colors, pch = 22)
plot(rdf$svl, plot.base$PredLine, col = hab.colors[as.numeric(rdf$habitat)],
pch = 16) # same thing
# plot RegScores
plot(fit.hab, predictor = rdf$svl, type = 'regression', reg.type = 'RegScore',
pch = 16,
col = hab.colors[as.numeric(rdf$habitat)])
legend('topleft', levels(habitat.fctr), pt.bg = hab.colors, pch = 22)
plot(rdf$svl, plot.base$RegScore, col = hab.colors[as.numeric(rdf$habitat)],
pch = 16) # same thing
# plot ggplot2 ----
# Figure 2
# Plot habitat slopes with ggplot2
fit.hab.ggplot.data <- data.frame(fitted_PC1 = plot.base$PredLine,
RegScore = plot.base$RegScore[,1],
svl = rdf$svl,
habitat = rdf$habitat)
habitat.slope.plot <- ggplot(data = fit.hab.ggplot.data, aes(x = svl)) +
geom_point(aes(y = RegScore, color = habitat), alpha = 0.2, size = 2) +
geom_line(aes(y = fitted_PC1, color = habitat), size = 1) +
scale_color_manual(values = hab.colors) +
labs(x = 'logSVL', y = 'Regression Scores') +
theme.clean() +
theme(legend.position = 'bottom')
# get species habitats
hab.sp <- data.sp$habitat_broad[match(rownames(pca.ols$x), data.sp$species)]
names(hab.sp) <- data.sp$species[match(rownames(pca.ols$x), data.sp$species)]
# size model (species data) ----
# Prepare data
# Drop species with less than 5 individuals from the tree
data.sp <- data.sp %>%
filter(species %in% sp.to.keep)
dat.tree.morpho <- treedata(phy = tree0, data = data.sp)
tree <- dat.tree.morpho$phy
dat.morpho <- as.data.frame(dat.tree.morpho$data)
class(dat.morpho$SVL)
# class is character, let's do it numeric
dat.num <- dat.morpho[, c(6:ncol(dat.morpho))]
for (i in 1:ncol(dat.num)){
dat.num[,i] <- as.numeric(as.character(dat.num[,i]))
}
dat.morpho.num <- cbind(dat.morpho[, 1:5], dat.num)
svl.sp <- log(dat.morpho.num$SVL)
names(svl.sp) <- dat.morpho.num$species
# shape~size phylogenetic regression ----
shape.sp <- as.matrix(log(dat.morpho.num[, 7:ncol(dat.morpho.num)]))
svl.sp
identical(names(svl.sp), rownames(shape.sp))
# Prepare data
rdf.size <- rrpp.data.frame(svl = svl.sp, shape = shape.sp)
# Multivariate linear model
fit.svl <- lm.rrpp(shape~svl, data = rdf.size, Cov = vcv(tree))
anova(fit.svl)
shape.res <- residuals(fit.svl)
