slp.limbshape.rock <-rbind(evol_alom = slp.limbshape.hab['rock',],
limbshape.slp[hab.mn == 'rock', ])
slp.limbshape.correlations.rock <- vec.cor.matrix(slp.limbshape.rock)[1,]
slp.limbshape.angles.rock <- (acos(RRPP:::vec.cor.matrix(slp.limbshape.rock))*180/pi)[1,]
# limb tree
slp.limbshape.tree <-rbind(evol_alom = slp.limbshape.hab['tree',],
limbshape.slp[hab.mn == 'tree', ])
slp.limbshape.correlations.tree <- vec.cor.matrix(slp.limbshape.tree)[1,]
slp.limbshape.angles.tree <- (acos(RRPP:::vec.cor.matrix(slp.limbshape.tree))*180/pi)[1,]
slp.limbshape.angles.tree
slp.headshape.correlations.tree
slp.headshape.angles.tree
head_static_plot
fit.sp.ggplot.data
head.slp
pred_head
slp.headshape.angles.ground
slp.headshape.angles.rock
slp.headshape.angles.tree
slp.limbshape.angles.ground
slp.headshape.correlations.ground
slp.headshape.angles.ground
slp.headshape.correlations.ground
as.data.frame(slp.headshape.correlations.ground)
data.frame(cor = slp.headshape.correlations.ground,
angle = slp.headshape.angles.ground)
dd <- data.frame(cor = slp.headshape.correlations.ground,
angle = slp.headshape.angles.ground)
data.frame(cor = c(slp.headshape.correlations.ground,
slp.headshape.correlations.rock,
slp.headshape.correlations.tree),
angle = slp.headshape.angles.ground)
c(slp.headshape.correlations.ground,
slp.headshape.correlations.rock,
slp.headshape.correlations.tree)
data.frame(cor = c(slp.headshape.correlations.ground,
slp.headshape.correlations.rock,
slp.headshape.correlations.tree),
angle = c(slp.headshape.angles.ground,
slp.headshape.angles.rock,
slp.headshape.angles.tree))
c(names(slp.headshape.angles.ground,
slp.headshape.angles.rock,
slp.headshape.angles.tree)
)
c(names(slp.headshape.angles.ground),
names(slp.headshape.angles.rock),
names(slp.headshape.angles.tree)
)
data.frame(species = c(names(slp.headshape.angles.ground),
names(slp.headshape.angles.rock),
names(slp.headshape.angles.tree)),
cor = c(slp.headshape.correlations.ground,
slp.headshape.correlations.rock,
slp.headshape.correlations.tree),
angle = c(slp.headshape.angles.ground,
slp.headshape.angles.rock,
slp.headshape.angles.tree))
length(slp.headshape.angles.ground)
data.frame(species = c(names(slp.headshape.angles.ground),
names(slp.headshape.angles.rock),
names(slp.headshape.angles.tree)),
hab = c(rep('ground', length(slp.headshape.angles.ground)),
rep('rock', length(slp.headshape.angles.rock)),
rep('tree', length(slp.headshape.angles.tree))),
cor = c(slp.headshape.correlations.ground,
slp.headshape.correlations.rock,
slp.headshape.correlations.tree),
angle = c(slp.headshape.angles.ground,
slp.headshape.angles.rock,
slp.headshape.angles.tree))
slp.limbshape.correlations.ground
data.frame(species = c(names(slp.headshape.angles.ground),
names(slp.headshape.angles.rock),
names(slp.headshape.angles.tree)),
hab = c(rep('ground', length(slp.headshape.angles.ground)),
rep('rock', length(slp.headshape.angles.rock)),
rep('tree', length(slp.headshape.angles.tree))),
cor_head = c(slp.headshape.correlations.ground,
slp.headshape.correlations.rock,
slp.headshape.correlations.tree),
angle_head = c(slp.headshape.angles.ground,
slp.headshape.angles.rock,
slp.headshape.angles.tree),
cor_limb = c(slp.limbshape.correlations.ground,
slp.limbhape.correlations.rock,
slp.limbshape.correlations.tree),
angle_limb = c(slp.limbshape.angles.ground,
slp.limbshape.angles.rock,
slp.limbshape.angles.tree))
data.frame(species = c(names(slp.headshape.angles.ground),
names(slp.headshape.angles.rock),
names(slp.headshape.angles.tree)),
hab = c(rep('ground', length(slp.headshape.angles.ground)),
rep('rock', length(slp.headshape.angles.rock)),
rep('tree', length(slp.headshape.angles.tree))),
cor_head = c(slp.headshape.correlations.ground,
slp.headshape.correlations.rock,
slp.headshape.correlations.tree),
angle_head = c(slp.headshape.angles.ground,
slp.headshape.angles.rock,
slp.headshape.angles.tree),
cor_limb = c(slp.limbshape.correlations.ground,
slp.limbshape.correlations.rock,
slp.limbshape.correlations.tree),
angle_limb = c(slp.limbshape.angles.ground,
slp.limbshape.angles.rock,
slp.limbshape.angles.tree))
cor.angle.table <- data.frame(species = c(names(slp.headshape.angles.ground),
names(slp.headshape.angles.rock),
names(slp.headshape.angles.tree)),
hab = c(rep('ground', length(slp.headshape.angles.ground)),
rep('rock', length(slp.headshape.angles.rock)),
rep('tree', length(slp.headshape.angles.tree))),
cor_head = c(slp.headshape.correlations.ground,
slp.headshape.correlations.rock,
slp.headshape.correlations.tree),
angle_head = c(slp.headshape.angles.ground,
slp.headshape.angles.rock,
slp.headshape.angles.tree),
cor_limb = c(slp.limbshape.correlations.ground,
slp.limbshape.correlations.rock,
slp.limbshape.correlations.tree),
angle_limb = c(slp.limbshape.angles.ground,
slp.limbshape.angles.rock,
slp.limbshape.angles.tree))
cor.angle.table[cor.angle.table$species != 'evol_alom', ]
cor.angle.table <- cor.angle.table[cor.angle.table$species != 'evol_alom', ]
cor.angle.table
write.table(cor.angle.table, '../Tables/cor_angles.csv', sep = ';',
dec = '.', quote = FALSE, row.names = FALSE)
pred_head
# PLOT STATIC ALLOMETRY PER HABITAT ----
fit.sp.ggplot.data <- data.frame(pred_head = plot.pls.head$PredLine,
regscore_head = plot.pls.head$RegScore,
slope_head = head.slp[rdf$species],
pred_limb = plot.pls.limb$PredLine,
regscore_limb = plot.pls.limb$RegScore,
slope_limb = limb.slp[rdf$species],
svl = rdf$svl,
habitat = rdf$habitat,
sp = rdf$species)
fit.sp.ggplot.data$slope_head
range(fit.sp.ggplot.data$slope_head)
slp.comp.ground
vec.cor.matrix(slp.comp.ground)
vec.cor.matrix(slp.comp.ground)
round(vec.cor.matrix(slp.comp.ground), 2)
dd <- round(vec.cor.matrix(slp.comp.ground), 2)
names(dd)
colnames(dd)
rownames(dd)
gsub('Pristurus_', 'P_', rownames(dd))
colnames(dd) <- rownames(dd) <- gsub('Pristurus_', 'P_', rownames(dd))
colnames(dd) <- rownames(dd) <- gsub('Pristurus_', 'P_', rownames(dd))
dd
dd
acos(RRPP:::vec.cor.matrix(dd))*180/pi
?diag
slp.hab
sp.slp
sp.slp
cor.angle.table
sp.slp
sp.slp[cor.angle.table$species,]
cor.angle.table$species
sp.slp[as.character(cor.angle.table$species),]
cor.angle.table
# COMPARE BETWEEN SPECIES ----
sp.slp[as.character(cor.angle.table$species),]
# COMPARE BETWEEN SPECIES ----
# Sort by habitat
slp.sort <- sp.slp[as.character(cor.angle.table$species),]
# Get correlation matrix between species
round(vec.cor.matrix(slp.sort), 2)
slp.sort
acos(RRPP:::vec.cor.matrix(slp.sort))*180/pi
acos(RRPP:::vec.cor.matrix(slp.sp.cor))*180/pi
# Get correlation matrix between species
slp.sp.cor <- round(vec.cor.matrix(slp.sort), 2)
acos(RRPP:::vec.cor.matrix(slp.sp.cor))*180/pi
slp.sp.angle <- acos(RRPP:::vec.cor.matrix(slp.sort))*180/pi
slp.comp.ground
acos(RRPP:::vec.cor.matrix(slp.comp.ground))*180/pi
slp.sp.cor
slp.sp.angle
View(slp.sp.angle)
write.table(slp.sp.angle, '../Tables/angles_between_species_slopes.csv', sep = ';',
dec = '.', quote = FALSE, row.names = FALSE)
cor.angle.table <- round(cor.angle.table[cor.angle.table$species != 'evol_alom', ], 2)
cor.angle.table
slp.sp.angle <- round(acos(RRPP:::vec.cor.matrix(slp.sort))*180/pi, 2)
write.table(slp.sp.angle, '../Tables/angles_between_species_slopes.csv', sep = ';',
dec = '.', quote = FALSE, row.names = FALSE)
heatmap(slp.sp.angle)
heatmap.2(slp.sp.angle)
heatmap(slp.sp.angle, Rowv = FALSE)
# Evolutionary allometry ----
# (from individuals dataset)
data0 <- read.table('data/morpho/morpho_pristurus.csv', sep = ';', dec = '.', header = TRUE, stringsAsFactors = TRUE)
sp.to.keep <- names(which(table(data0$species) >= 5))
data <- data0[data0$species %in% sp.to.keep, ]
data$species <- droplevels(data$species)
data$SVL <- log(data$SVL)
species.fctr <- as.factor(data$species)
habitat.fctr <- as.factor(data$habitat_broad)
rdf <- rrpp.data.frame(svl = data$SVL, shape = shape,
habitat = data$habitat_broad,
species = data$species)
allom.ind <- lm.rrpp(shape~svl, data = rdf)
library(RRPP)
# Evolutionary allometry ----
# (from individuals dataset)
data0 <- read.table('data/morpho/morpho_pristurus.csv', sep = ';', dec = '.', header = TRUE, stringsAsFactors = TRUE)
sp.to.keep <- names(which(table(data0$species) >= 5))
data <- data0[data0$species %in% sp.to.keep, ]
data$species <- droplevels(data$species)
data$SVL <- log(data$SVL)
species.fctr <- as.factor(data$species)
habitat.fctr <- as.factor(data$habitat_broad)
rdf <- rrpp.data.frame(svl = data$SVL, shape = shape,
habitat = data$habitat_broad,
species = data$species)
libs <- c('geomorph', 'RRPP', 'phytools', 'geiger', 'tidyverse')
easypackages::libraries(libs)
# Evolutionary allometry ----
# (from individuals dataset)
data0 <- read.table('data/morpho/morpho_pristurus.csv', sep = ';', dec = '.', header = TRUE, stringsAsFactors = TRUE)
sp.to.keep <- names(which(table(data0$species) >= 5))
data <- data0[data0$species %in% sp.to.keep, ]
data$species <- droplevels(data$species)
data$SVL <- log(data$SVL)
species.fctr <- as.factor(data$species)
habitat.fctr <- as.factor(data$habitat_broad)
shape <- as.matrix(log(data[, 8:ncol(data)]))
rdf <- rrpp.data.frame(svl = data$SVL, shape = shape,
habitat = data$habitat_broad,
species = data$species)
allom.ind <- lm.rrpp(shape~svl, data = rdf)
coef.ind <- allom.ind$LM$coefficients[2,]
coef.ind
# Static allometry ----
fit.sp <- lm.rrpp(shape~svl*species, data = rdf)
fit.coef.sp <- fit.sp$LM$coefficients
sp.slp <- fit.coef.sp[grep('svl', rownames(fit.coef.sp)), ]
sp.slp[-1,] <- sp.slp[-1,] + sp.slp[1,]
rownames(sp.slp) <- gsub('svl:species', '', rownames(sp.slp))
rownames(sp.slp) <- gsub('svl', 'Pristurus_abdelkuri', rownames(sp.slp))
# Compare evol and static allometry ----
slp.comp <-rbind(evol_alom = coef.ind, sp.slp)
slp.correlations <- vec.cor.matrix(slp.comp)[1,]
slp.angles <- (acos(RRPP:::vec.cor.matrix(slp.comp))*180/pi)[1,]
sort(slp.correlations, decreasing = TRUE)
slp.angles
# Evolutionary allometry PER HABITAT ----
# (from individuals dataset)
fit.hab <- lm.rrpp(shape~svl*habitat, data = rdf)
coef.hab <- fit.hab$LM$coefficients
slp.hab <- rbind(coef.hab[2,], coef.hab[2,]+coef.hab[5,],
coef.hab[2,]+coef.hab[6,])
rownames(slp.hab) <- c("ground","rock", "tree")
slp.hab
# Static allometry PER HABITAT ----
sp.slp
hab.mn <- as.factor(by(rdf$habitat,rdf$species,unique))
levels(hab.mn) <- levels(rdf$habitat)
identical(rownames(sp.slp), names(hab.mn))
sp.slp[hab.mn == 'ground', ]
sp.slp[hab.mn == 'rock', ]
sp.slp[hab.mn == 'tree', ]
# Compare evol and static allometry PER HABITAT ----
slp.comp.ground <-rbind(evol_alom = slp.hab['ground',], sp.slp[hab.mn == 'ground', ])
slp.correlations.ground <- vec.cor.matrix(slp.comp.ground)[1,]
slp.angles.ground <- (acos(RRPP:::vec.cor.matrix(slp.comp.ground))*180/pi)[1,]
slp.angles.ground
slp.comp.rock <-rbind(evol_alom = slp.hab['rock',], sp.slp[hab.mn == 'rock', ])
slp.correlations.rock <- vec.cor.matrix(slp.comp.rock)[1,]
slp.angles.rock <- (acos(RRPP:::vec.cor.matrix(slp.comp.rock))*180/pi)[1,]
slp.comp.tree <-rbind(evol_alom = slp.hab['tree',], sp.slp[hab.mn == 'tree', ])
slp.correlations.tree <- vec.cor.matrix(slp.comp.tree)[1,]
slp.angles.tree <- (acos(RRPP:::vec.cor.matrix(slp.comp.tree))*180/pi)[1,]
# SEPARATE HEAD AND LIMBS ----
svl <- log(data$SVL)
shape.head <- shape[, c(2:4)]
shape.limb <- shape[, 5:8]
# EVOLUTIONARY ALLOMETRY head and limbs ----
# Linear Models and slopes ----
# lm(PLS.scores ~ svl*habitat)
fit.headshape.hab <- lm.rrpp(shape.head ~ svl*habitat.fctr)
coef.headshape.hab <- fit.headshape.hab$LM$coefficients
slp.headshape.hab <- rbind(coef.headshape.hab[2,],
coef.headshape.hab[2,]+coef.headshape.hab[5,],
coef.headshape.hab[2,]+coef.headshape.hab[6,])
rownames(slp.headshape.hab) <- c("ground","rock", "tree")
slp.headshape.hab
fit.limbshape.hab <- lm.rrpp(shape.limb ~ svl*habitat.fctr)
coef.limbshape.hab <- fit.limbshape.hab$LM$coefficients
slp.limbshape.hab <- rbind(coef.limbshape.hab[2,],
coef.limbshape.hab[2,]+coef.limbshape.hab[5,],
coef.limbshape.hab[2,]+coef.limbshape.hab[6,])
rownames(slp.limbshape.hab) <- c("ground","rock", "tree")
slp.limbshape.hab
# STATIC ALLOMETRY head and limbs ----
# Linear Models ----
# lm(shape.vars ~ svl*sp)
fit.headshape.sp <- lm.rrpp(shape.head ~ svl*species.fctr)
plot.headshape.fit <- plot(fit.headshape.sp, predictor = svl, type = 'regression', pch = 16,
col = species.fctr)
plot.headshape.fit$PredLine
plot.headshape.fit$RegScore
plot(fit.headshape.sp, predictor = svl, type = 'regression', pch = 16,
reg.type = 'RegScore',
col = species.fctr)
fit.limbshape.sp <- lm.rrpp(shape.limb ~ svl*species.fctr)
plot.limbshape.fit <- plot(fit.limbshape.sp, predictor = svl, type = 'regression', pch = 16,
col = species.fctr)
plot.limbshape.fit$PredLine
plot.limbshape.fit$RegScore
plot(fit.limbshape.sp, predictor = svl, type = 'regression', pch = 16,
reg.type = 'RegScore',
col = species.fctr)
# Regression coefficients ----
coef.headshape <- fit.headshape.sp$LM$coefficients
coef.limbshape <- fit.limbshape.sp$LM$coefficients
# Per-species slopes ----
headshape.slp <- coef.headshape[grep('svl', rownames(coef.headshape)), ]
headshape.slp[-1,] <- headshape.slp[-1,] + headshape.slp[1,]
rownames(headshape.slp) <- gsub('svl:species.fctr', '', rownames(headshape.slp))
rownames(headshape.slp) <- gsub('svl', 'Pristurus_abdelkuri', rownames(headshape.slp))
limbshape.slp <- coef.limbshape[grep('svl', rownames(coef.limbshape)), ]
limbshape.slp[-1,] <- limbshape.slp[-1,] + limbshape.slp[1,]
rownames(limbshape.slp) <- gsub('svl:species.fctr', '', rownames(limbshape.slp))
rownames(limbshape.slp) <- gsub('svl', 'Pristurus_abdelkuri', rownames(limbshape.slp))
# Compare evol and static allometry head and limbs per habitat ----
headshape.slp
limbshape.slp
slp.headshape.hab
slp.limbshape.hab
# head ground
slp.headshape.ground <-rbind(evol_alom = slp.headshape.hab['ground',],
headshape.slp[hab.mn == 'ground', ])
slp.headshape.correlations.ground <- vec.cor.matrix(slp.headshape.ground)[1,]
slp.headshape.angles.ground <- (acos(RRPP:::vec.cor.matrix(slp.headshape.ground))*180/pi)[1,]
# head rock
slp.headshape.rock <-rbind(evol_alom = slp.headshape.hab['rock',],
headshape.slp[hab.mn == 'rock', ])
slp.headshape.correlations.rock <- vec.cor.matrix(slp.headshape.rock)[1,]
slp.headshape.angles.rock <- (acos(RRPP:::vec.cor.matrix(slp.headshape.rock))*180/pi)[1,]
# head tree
slp.headshape.tree <-rbind(evol_alom = slp.headshape.hab['tree',],
headshape.slp[hab.mn == 'tree', ])
slp.headshape.correlations.tree <- vec.cor.matrix(slp.headshape.tree)[1,]
slp.headshape.angles.tree <- (acos(RRPP:::vec.cor.matrix(slp.headshape.tree))*180/pi)[1,]
# limb ground
slp.limbshape.ground <-rbind(evol_alom = slp.limbshape.hab['ground',],
limbshape.slp[hab.mn == 'ground', ])
slp.limbshape.correlations.ground <- vec.cor.matrix(slp.limbshape.ground)[1,]
slp.limbshape.angles.ground <- (acos(RRPP:::vec.cor.matrix(slp.limbshape.ground))*180/pi)[1,]
# limb rock
slp.limbshape.rock <-rbind(evol_alom = slp.limbshape.hab['rock',],
limbshape.slp[hab.mn == 'rock', ])
slp.limbshape.correlations.rock <- vec.cor.matrix(slp.limbshape.rock)[1,]
slp.limbshape.angles.rock <- (acos(RRPP:::vec.cor.matrix(slp.limbshape.rock))*180/pi)[1,]
# limb tree
slp.limbshape.tree <-rbind(evol_alom = slp.limbshape.hab['tree',],
limbshape.slp[hab.mn == 'tree', ])
slp.limbshape.correlations.tree <- vec.cor.matrix(slp.limbshape.tree)[1,]
slp.limbshape.angles.tree <- (acos(RRPP:::vec.cor.matrix(slp.limbshape.tree))*180/pi)[1,]
# TABLE CORRELATION AND ANGLES ----
# Get a table with the correlation and angle of each species to the
# evolutionary allometry of their respective habitat
cor.angle.table <- data.frame(species = c(names(slp.headshape.angles.ground),
names(slp.headshape.angles.rock),
names(slp.headshape.angles.tree)),
hab = c(rep('ground', length(slp.headshape.angles.ground)),
rep('rock', length(slp.headshape.angles.rock)),
rep('tree', length(slp.headshape.angles.tree))),
cor_head = c(slp.headshape.correlations.ground,
slp.headshape.correlations.rock,
slp.headshape.correlations.tree),
angle_head = c(slp.headshape.angles.ground,
slp.headshape.angles.rock,
slp.headshape.angles.tree),
cor_limb = c(slp.limbshape.correlations.ground,
slp.limbshape.correlations.rock,
slp.limbshape.correlations.tree),
angle_limb = c(slp.limbshape.angles.ground,
slp.limbshape.angles.rock,
slp.limbshape.angles.tree))
cor.angle.table <- cor.angle.table[cor.angle.table$species != 'evol_alom', ]
libs <- c('geomorph', 'RRPP', 'phytools', 'geiger', 'tidyverse')
easypackages::libraries(libs)
# Evolutionary allometry ----
# (from individuals dataset)
data0 <- read.table('data/morpho/morpho_pristurus.csv', sep = ';', dec = '.', header = TRUE, stringsAsFactors = TRUE)
sp.to.keep <- names(which(table(data0$species) >= 5))
data <- data0[data0$species %in% sp.to.keep, ]
data$species <- droplevels(data$species)
data$SVL <- log(data$SVL)
species.fctr <- as.factor(data$species)
habitat.fctr <- as.factor(data$habitat_broad)
shape <- as.matrix(log(data[, 8:ncol(data)]))
tree0 <- read.nexus('data/phylogeny/pristurus_tree_final.nex')
LS.mns <- pairwise(lm.rrpp(shape~species, data = rdf, iter=0), groups = rdf$species)$LS.means[[1]]
# DCA added from other script
rdf <- rrpp.data.frame(svl = data$SVL, shape = shape, habitat = data$habitat_broad,
species = data$species)
tree0 <- read.nexus('data/phylogeny/pristurus_tree_final.nex')
LS.mns <- pairwise(lm.rrpp(shape~species, data = rdf, iter=0), groups = rdf$species)$LS.means[[1]]
sz.mn <- tapply(rdf$svl,rdf$species,mean)
hab.mn <- as.factor(by(rdf$habitat,rdf$species,unique))
levels(hab.mn) <- levels(rdf$habitat)
tree <- treedata(phy = tree0, data = LS.mns)$phy
C <- vcv.phylo(tree)
######   EVOLUTIONARY ALLOMETRY (is based on species means)
allom.sp <- lm.rrpp(LS.mns~sz.mn, Cov = C)
allom.ind <- lm.rrpp(shape~svl, data = rdf)
anova(allom.sp)
anova(allom.ind)
#comparison of angles
M <-rbind(coef.sp <- allom.sp$LM$gls.coefficients[2,],
coef.ind <- allom.ind$LM$coefficients[2,])
M
acos(RRPP:::vec.cor.matrix(M))*180/pi  #virtually parallel (angle of 1.49 degrees)
######   EVOLUTIONARY ALLOMETRY (is based on species means)
allom.evol <- lm.rrpp(LS.mns~sz.mn, Cov = C)
######   EVOLUTIONARY ALLOMETRY (is based on species means)
allom.evol <- lm.rrpp(LS.mns~sz.mn, Cov = C)
allom.ind <- lm.rrpp(shape~svl, data = rdf)  #overall individual allometry
#comparison of angles
M <-rbind(coef.evol <- allom.sp$LM$gls.coefficients[2,],
coef.ind <- allom.ind$LM$coefficients[2,])
acos(RRPP:::vec.cor.matrix(M))*180/pi  #virtually parallel (angle of 1.49 degrees)
#Static allometry in each species
fit.sp <- lm.rrpp(shape~svl*species, data = rdf)
fit.coef.sp <- fit.sp$LM$coefficients
sp.slp <- fit.coef.sp[grep('svl', rownames(fit.coef.sp)), ]
sp.slp[-1,] <- sp.slp[-1,] + sp.slp[1,]
rownames(sp.slp) <- gsub('svl:species', '', rownames(sp.slp))
rownames(sp.slp) <- gsub('svl', 'Pristurus_abdelkuri', rownames(sp.slp))
dim(sp.slp)
# Evolutionary allometry ----
# (from individuals dataset)
data0 <- read.table('data/morpho/morpho_pristurus.csv', sep = ';', dec = '.', header = TRUE, stringsAsFactors = TRUE)
sp.to.keep <- names(which(table(data0$species) >= 5))
data <- data0[data0$species %in% sp.to.keep, ]
data$species <- droplevels(data$species)
data$SVL <- log(data$SVL)
species.fctr <- as.factor(data$species)
habitat.fctr <- as.factor(data$habitat_broad)
shape <- as.matrix(log(data[, 8:ncol(data)]))
rdf <- rrpp.data.frame(svl = data$SVL, shape = shape,
habitat = data$habitat_broad,
species = data$species)
####################### DCA added from other script  #####################
tree0 <- read.nexus('data/phylogeny/pristurus_tree_final.nex')
LS.mns <- pairwise(lm.rrpp(shape~species, data = rdf, iter=0), groups = rdf$species)$LS.means[[1]]
sz.mn <- tapply(rdf$svl,rdf$species,mean)
hab.mn <- as.factor(by(rdf$habitat,rdf$species,unique))
levels(hab.mn) <- levels(rdf$habitat)
tree <- treedata(phy = tree0, data = LS.mns)$phy
C <- vcv.phylo(tree)
######   EVOLUTIONARY ALLOMETRY (is based on species means)
allom.evol <- lm.rrpp(LS.mns~sz.mn, Cov = C)
allom.ind <- lm.rrpp(shape~svl, data = rdf)  #overall individual allometry
#comparison of angles
M <-rbind(coef.evol <- allom.sp$LM$gls.coefficients[2,],
coef.ind <- allom.ind$LM$coefficients[2,])
#comparison of angles
M <-rbind(coef.evol <- allom.evol$LM$gls.coefficients[2,],
coef.ind <- allom.ind$LM$coefficients[2,])
acos(RRPP:::vec.cor.matrix(M))*180/pi  #virtually parallel (angle of 1.49 degrees)
#Static allometry in each species
fit.sp <- lm.rrpp(shape~svl*species, data = rdf)
fit.coef.sp <- fit.sp$LM$coefficients
sp.slp <- fit.coef.sp[grep('svl', rownames(fit.coef.sp)), ]
sp.slp[-1,] <- sp.slp[-1,] + sp.slp[1,]
rownames(sp.slp) <- gsub('svl:species', '', rownames(sp.slp))
rownames(sp.slp) <- gsub('svl', 'Pristurus_abdelkuri', rownames(sp.slp))
coef.evol
colnames(sp.slp)
# Compare evol and static allometry ----
slp.comp <-rbind(coev.evol, sp.slp)
# Compare evol and static allometry ----
slp.comp <-rbind(coef.evol, sp.slp)
slp.correlations <- vec.cor.matrix(slp.comp)[1,]
slp.angles <- (acos(RRPP:::vec.cor.matrix(slp.comp))*180/pi)[1,]
slp.angles
RRPP:::vec.cor.matrix(slp.comp)
RRPP:::vec.cor.matrix(slp.comp)[,1]
acos(RRPP:::vec.cor.matrix(slp.comp)[,1])
acos(RRPP:::vec.cor.matrix(slp.comp)[,1])*180/pi
slp.angles <- acos(RRPP:::vec.cor.matrix(slp.comp)[,1])*180/pi
mean(slp.angles)
hist(slp.angles)
median(slp.angles)
sort(slp.correlations, decreasing = TRUE)
sort(slp.angles, decreasing = FALSE)
# 2: Compare evol and static (habitat) allometry ----
fit.hab <- lm.rrpp(shape~svl*habitat, data = rdf)
coef.hab <- fit.hab$LM$coefficients
slp.hab <- rbind(coef.hab[2,], coef.hab[2,]+coef.hab[5,],
coef.hab[2,]+coef.hab[6,])
rownames(slp.hab) <- c("ground","rock", "tree")
slp.hab
slp.hab <-rbind(coef.evol, sp.hab)
slp.hab <-rbind(coef.evol, slp.hab)
slp.hab
slp.hab.angles <- acos(RRPP:::vec.cor.matrix(slp.hab)[,1])*180/pi
mean(slp.hab.angles)
hist(slp.hab.angles)
slp.hab.angles
